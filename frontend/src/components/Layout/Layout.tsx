import React, { createContext, useEffect, useState } from "react";
import SideMenu from "../SideMenu/SideMenu";
import Head from "next/head";
import { useSession } from "next-auth/react";
import { withCookies, useCookies, Cookies } from "react-cookie";
import { parseCookies } from "@/helpers/Helpers";
import { useRouter } from "next/router";
import Main from "../Main/Main";
import { Alert, Snackbar } from "@mui/material";
import { SnackbarContextProvider } from "@/context/SnackbarContext";
import { DataContextProvider } from "@/context/DataContext";
import NotificationConnection from "@/context/NotificationsConnection";
import { NotificationContextProvider } from "@/context/NotificationContext";
import { UserContextProvider } from "@/context/UserContext";

interface Project {
  name: string;
}

export const TrackingContext = createContext("");

const Layout = ({
  open,
  drawerClose,
  drawerOpen,
  children,
  runningTracking,
  trackingCookie,
}: {
  open: boolean;
  drawerClose: any;
  drawerOpen: any;
  children: any;
  runningTracking: any;
  trackingCookie: any;
}) => {
  // const [open, setOpen] = React.useState(true);
  const [recentProjects, setRecentProjects] = useState();
  const session = useSession();
  const [sessionStatus, setSessionStatus] = useState<string>("unauthenticated");

  useEffect(() => {
    setSessionStatus(session.status);
  }, [session.status]);

  useEffect(() => {
    if (sessionStatus == "authenticated") {
      fetch("http://localhost:9000/projects/", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          Authorization: "Bearer " + String(session.data.user.access),
        },
      })
        .then((x) => x.json())
        .then((data) => handleProjects(data));

      // console.log(recentProjects);
    }
  }, [sessionStatus]);

  function handleProjects(data: any) {
    setRecentProjects(data);
    // console.log(recentProjects);
  }

  // useEffect(() => {
  //   if (dataArray != undefined) {
  //     console.log("2 watch for change in data array");
  //     setRecentProjects(dataArray);
  //   }
  // }, [dataArray]);

  return (
    <>
      <Head>
        <title>
          {trackingCookie.tracking
            ? (runningTracking?.hours > 0 ? runningTracking?.hour + ":" : "") +
              runningTracking?.minutes.toString().padStart(2, "0") +
              ":" +
              runningTracking?.seconds.toString().padStart(2, "0")
            : "Timepal"}
        </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NotificationContextProvider>
        <UserContextProvider>
          <SideMenu
            drawerOpen={drawerOpen}
            drawerClose={drawerClose}
            open={open}
            children={children}
          />
        </UserContextProvider>
      </NotificationContextProvider>

      <NotificationConnection />
      <DataContextProvider>
        <UserContextProvider>
          <Main
            children={children}
            open={open}
            runningTracking={runningTracking}
          />
        </UserContextProvider>
      </DataContextProvider>
    </>
  );
};

export default withCookies(Layout);
